@use 'sass:math';

$mobile-width: 719px;
$tablet-width: 1100px;
$medium-width: 1600px;

@mixin topDottedBorder {
	background-repeat: repeat-x;
	background-image: url("data:image/svg+xml,%3Csvg width='8' height='1' viewBox='0 0 8 1' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cline opacity='0.5' y1='0.5' x2='8' y2='0.5' stroke='%23002155' stroke-dasharray='1 3'/%3E%3C/svg%3E%0A");
	background-position: top left;
}

@mixin mediaMobile {
	@media (max-width: #{$mobile-width}) {
		@content;
	}
}

@mixin mediaTablet {
	@media (max-width: #{$tablet-width}) {
		@content;
	}
}

@mixin mediaMedium {
	@media (max-width: #{$medium-width}) {
		@content;
	}
}

@mixin lh($fontValue, $heightValue) {
	$my_width: calc($heightValue / $fontValue) * 100%;
	line-height: $my_width;
}

@function strip-units($number) {
	@return math.div($number, $number * 0 + 1)
}

@mixin clampf($min-fs, $max-fs, $min-w: 375px, $max-w: 1440px) {
	$mf: strip-units($max-fs - $min-fs);
	$mw: strip-units($max-w - $min-w);

	& {
		font-size: #{$min-fs};
		font-size: clamp($min-fs, calc(#{$min-fs} + #{$mf} * ((100vw - #{$min-w}) / #{$mw})), $max-fs);
	}

}

@mixin clamp($style, $min-fs, $max-fs, $min-w: 375px, $max-w: 1440px) {
	$mf: strip-units($max-fs - $min-fs);
	$mw: strip-units($max-w - $min-w);

	& {
		#{$style}: $max-fs;
		#{$style}: clamp($min-fs, calc(#{$min-fs} + #{$mf} * ((100vw - #{$min-w}) / #{$mw})), $max-fs);
	}

}